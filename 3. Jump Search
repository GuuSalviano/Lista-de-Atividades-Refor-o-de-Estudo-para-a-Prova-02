def jump_search(arr, target):

n = len(arr)
    step = int(math.sqrt(n))  # Optimal step size is sqrt(n)
    prev = 0


    while prev < n and arr[min(step, n) - 1] < target:
        prev = step
        step += int(math.sqrt(n))
        if prev >= n:
            return -1  

    
    for i in range(prev, min(step, n)):
        if arr[i] == target:
            return i

    return -1  



sorted_list = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]
target = 13
list_size = len(sorted_list)
optimal_step = int(math.sqrt(list_size))
jump_search_result = jump_search(sorted_list, target)

(optimal_step, jump_search_result)

Resultado = (3, 6)
